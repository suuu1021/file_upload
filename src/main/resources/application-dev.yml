server:
  servlet:
    encoding:
      charset: utf-8
      force: true
  port: 8080

# 2칸 공백, 탭키 절대 사용 금지!
# 로그 설정 (개발환경용)
# 로그 레벨의 개념
# ERROR > WARN > INFO > DEBUG > TRACE
logging:
  level:
    root: INFO
    com.tenco.blog: DEBUG          # 개발 시 모든 로그 확인
    #com.tenco.blog.user: INFO   # User 패키지만 INFO (선택사항)

# 초기 파라미터 설정
# 파일 업로드 설정 (배포를 위해서는 시스템 변수나 상대 경로로 설정해야 한다)
file:
  # 시스템 환경 변수를 spring에서 사용할 수 있게 해주는 문법 file.upload-dir
  upload-dir: ${user.home}/uploads/profiles/  # 운영체제별 자동 적용 됨
  # C:Users/사용자명/uploads/profiles/
  # /home/ec2-user/uploads/profiles/  AWS Linux


spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 20MB # 개별 파일 최대 크기
      max-request-size: 20MB # 개별 요청 최대 크기
      location: ${java.io.tmpdir} # 시스템 기본 임시 디렉토리
      # C:\Users\사용자명\AppData\Local\Temp\
      # \temp\
  # Mustache 템플릿 엔진 설정
  mustache:
    servlet:
      # 세션과 요청 속성을 템플릿에서 사용 가능하게 함
      expose-session-attributes: true
      expose-request-attributes: true

  # 데이터베이스 연결 설정 (H2 인메모리 데이터베이스)
  datasource:
    driver-class-name: org.h2.Driver
    # MODE=MySQL: H2를 MySQL 호환 모드로 실행
    url: jdbc:h2:mem:test;MODE=MySQL
    username: sa
    password:

  # H2 데이터베이스 웹 콘솔 활성화 (개발용)
  # localhost:8080/h2-console로 접속 가능
  h2:
    console:
      enabled: true

  # 초기 데이터 로딩 설정
  sql:
    init:
      # 2.5 이상 버전부터 명시를 해야 insert 처리 됨
      # never - data.sql을 전혀 실행하지 않습니다.
      # always - 애플리케이션 시작 시마다 data.sql을 실행하여 데이터를 삽입합니다.
      mode: always
      # 애플리케이션 시작시 실행할 SQL 파일 위치
      data-locations:
        - classpath:db/data.sql

  # JPA 설정
  jpa:
    # OSIV 설정
    open-in-view: true  # 기본값 true
    hibernate:
      # create: 애플리케이션 시작시 테이블을 새로 생성, 기존 데이터는 모두 삭제됨 (개발용)
      # update: 기존 테이블을 유지하고, 엔티티 변경 사항만 반영합니다. 기존 데이터는 삭제되지 않음.
      # none: Hibernate가 스키마를 수정하지 않음.
      # validate: 엔티티와 테이블 스키마가 일치하는지 검증만 하고 변경하지 않음.
      ddl-auto: update # 기존 데이터 유지하면서 스키마 변경사항만 반영 (권장)
    # SQL 쿼리를 콘솔에 출력 (개발용 디버깅)
    show-sql: true
    properties:
      hibernate:
        # SQL 쿼리를 보기 좋게 포맷팅
        format_sql: true
        default_batch_fetch_size: 10
    # data.sql 파일을 Hibernate 초기화 이후에 실행
    defer-datasource-initialization: true